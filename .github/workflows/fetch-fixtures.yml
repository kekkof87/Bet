name: Fetch Pipeline

on:
  workflow_dispatch:
  schedule:
    - cron: "5 * * * *"   # ogni ora al minuto 5 (UTC)
  push:
    branches: ["main"]

concurrency:
  group: fetch-pipeline
  cancel-in-progress: true

jobs:
  fetch-run:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    permissions:
      contents: read
      actions: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install project (editable if possible)
        run: |
          if [ -f pyproject.toml ] || [ -f setup.cfg ] || [ -f setup.py ]; then
            pip install -e .
          elif [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "Nessun file di installazione trovato, installerÃ² solo dipendenze base (se servono)."
          fi
          pip list | grep -i bet || true

      - name: Export PYTHONPATH (src layout)
        run: |
          echo "PYTHONPATH=$PWD/src" >> $GITHUB_ENV

      - name: Run tests (optional)
        env:
          PYTHONPATH: ${{ env.PYTHONPATH }}
        run: |
          pytest -q || exit 1

      - name: Run fetch pipeline
        env:
          PYTHONPATH: ${{ env.PYTHONPATH }}
          API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}
          ENABLE_ODDS_INGESTION: ${{ vars.ENABLE_ODDS_INGESTION }}
          ENABLE_PREDICTIONS: ${{ vars.ENABLE_PREDICTIONS }}
          ENABLE_PREDICTIONS_USE_ODDS: ${{ vars.ENABLE_PREDICTIONS_USE_ODDS }}
          ENABLE_VALUE_DETECTION: ${{ vars.ENABLE_VALUE_DETECTION }}
          ENABLE_VALUE_ALERTS: ${{ vars.ENABLE_VALUE_ALERTS }}
          ENABLE_ROI_TRACKING: ${{ vars.ENABLE_ROI_TRACKING }}
          ENABLE_VALUE_HISTORY: ${{ vars.ENABLE_VALUE_HISTORY }}
          ROI_MIN_EDGE: ${{ vars.ROI_MIN_EDGE }}
        run: |
            echo "PYTHONPATH=$PYTHONPATH"
            python scripts/fetch_fixtures.py
            echo "Lista file generati sotto data/:"
            find data -maxdepth 4 -type f -print || true

      - name: Show key outputs
        if: always()
        run: |
          for f in \
            data/predictions/latest_predictions.json \
            data/value_alerts/value_alerts.json \
            data/roi/roi_metrics.json \
            data/odds/odds_latest.json; do
            if [ -f "$f" ]; then
              echo "----- $f -----"
              sed -e 's/{/{\n/g' -e 's/}/\n}/g' "$f" | head -n 60
            fi
          done

      - name: Upload data artifact
        uses: actions/upload-artifact@v4
        with:
          name: pipeline-data
            # Se vuoi solo certe sotto-cartelle, modifica path
          path: data
          retention-days: 7
