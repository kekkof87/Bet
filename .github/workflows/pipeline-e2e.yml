name: Pipeline E2E (fixtures → odds → predictions → alerts → ROI)

on:
  workflow_dispatch:
  schedule:
    - cron: "7 * * * *"  # ogni ora al minuto 7 UTC

concurrency:
  group: pipeline-e2e
  cancel-in-progress: false

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      actions: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements*.txt', 'pyproject.toml', 'setup.cfg') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          set -e
          if [ -f requirements-dev.txt ]; then
            python -m pip install -r requirements-dev.txt
          elif [ -f requirements.txt ]; then
            python -m pip install -r requirements.txt
          else:
            python -m pip install fastapi uvicorn pydantic requests prometheus-client pytest httpx streamlit
          fi

      - name: Export PYTHONPATH
        run: echo "PYTHONPATH=$PWD/src" >> $GITHUB_ENV

      - name: Show selected provider scope
        run: |
          echo "PROVIDER_SOURCE=${{ vars.PROVIDER_SOURCE }}"
          echo "FOOTBALL_DATA_LEAGUES=${{ vars.FOOTBALL_DATA_LEAGUES }}"
          echo "UPCOMING_DAYS=${{ vars.UPCOMING_DAYS }}"
          echo "BET_DATA_DIR=${{ vars.BET_DATA_DIR }}"
          echo "ODDS_PROVIDER=${{ vars.ODDS_PROVIDER }}"
          echo "ENABLE_ODDS_INGESTION=${{ vars.ENABLE_ODDS_INGESTION }}"
          echo "ENABLE_PREDICTIONS=${{ vars.ENABLE_PREDICTIONS }}"
          echo "ENABLE_PREDICTIONS_USE_ODDS=${{ vars.ENABLE_PREDICTIONS_USE_ODDS }}"
          echo "ENABLE_VALUE_DETECTION=${{ vars.ENABLE_VALUE_DETECTION }}"
          echo "ENABLE_VALUE_ALERTS=${{ vars.ENABLE_VALUE_ALERTS }}"
          echo "ENABLE_ROI_TRACKING=${{ vars.ENABLE_ROI_TRACKING }}"

      - name: Fetch fixtures
        env:
          PYTHONPATH: ${{ env.PYTHONPATH }}
          BET_DATA_DIR: ${{ vars.BET_DATA_DIR }}
          PROVIDER_SOURCE: ${{ vars.PROVIDER_SOURCE }}
          FOOTBALL_DATA_API_KEY: ${{ secrets.FOOTBALL_DATA_API_KEY }}
          FOOTBALL_DATA_LEAGUES: ${{ vars.FOOTBALL_DATA_LEAGUES }}
          UPCOMING_DAYS: ${{ vars.UPCOMING_DAYS }}
          API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}
          API_FOOTBALL_DEFAULT_LEAGUE_ID: ${{ vars.API_FOOTBALL_DEFAULT_LEAGUE_ID }}
          API_FOOTBALL_DEFAULT_SEASON: ${{ vars.API_FOOTBALL_DEFAULT_SEASON }}
          FETCH_ABORT_ON_EMPTY: ${{ vars.FETCH_ABORT_ON_EMPTY }}
          ALLOW_ALL_LEAGUES_FALLBACK: ${{ vars.ALLOW_ALL_LEAGUES_FALLBACK }}
        run: |
          python scripts/fetch_fixtures.py

      - name: Fetch odds (model)
        env:
          PYTHONPATH: ${{ env.PYTHONPATH }}
          BET_DATA_DIR: ${{ vars.BET_DATA_DIR }}
          ENABLE_ODDS_INGESTION: ${{ vars.ENABLE_ODDS_INGESTION || 1 }}
          ODDS_PROVIDER: ${{ vars.ODDS_PROVIDER || 'model' }}
        run: |
          python scripts/fetch_odds.py

      - name: Run predictions
        env:
          PYTHONPATH: ${{ env.PYTHONPATH }}
          BET_DATA_DIR: ${{ vars.BET_DATA_DIR }}
          ENABLE_PREDICTIONS: ${{ vars.ENABLE_PREDICTIONS || 1 }}
          ENABLE_PREDICTIONS_USE_ODDS: ${{ vars.ENABLE_PREDICTIONS_USE_ODDS || 1 }}
          ENABLE_VALUE_DETECTION: ${{ vars.ENABLE_VALUE_DETECTION || 1 }}
          ENABLE_MODEL_ADJUST: ${{ vars.ENABLE_MODEL_ADJUST || 0 }}
          MODEL_ADJUST_WEIGHT: ${{ vars.MODEL_ADJUST_WEIGHT || 0.7 }}
        run: |
          python scripts/run_predictions.py

      - name: Build value alerts
        env:
          PYTHONPATH: ${{ env.PYTHONPATH }}
          BET_DATA_DIR: ${{ vars.BET_DATA_DIR }}
          ENABLE_VALUE_ALERTS: ${{ vars.ENABLE_VALUE_ALERTS || 1 }}
          VALUE_ALERT_MIN_EDGE: ${{ vars.VALUE_ALERT_MIN_EDGE || 0.05 }}
        run: |
          python scripts/build_value_alerts.py

      - name: Dispatch alerts (optional)
        if: ${{ vars.ENABLE_ALERT_DISPATCH == '1' }}
        env:
          PYTHONPATH: ${{ env.PYTHONPATH }}
          BET_DATA_DIR: ${{ vars.BET_DATA_DIR }}
          ENABLE_ALERT_DISPATCH: ${{ vars.ENABLE_ALERT_DISPATCH }}
          ALERT_DISPATCH_MODE: ${{ vars.ALERT_DISPATCH_MODE || 'stdout' }}
          ALERT_WEBHOOK_URL: ${{ secrets.ALERT_WEBHOOK_URL }}
          ALERT_TELEGRAM_BOT_TOKEN: ${{ secrets.ALERT_TELEGRAM_BOT_TOKEN }}
          ALERT_TELEGRAM_CHAT_ID: ${{ secrets.ALERT_TELEGRAM_CHAT_ID }}
        run: |
          python scripts/dispatch_alerts.py

      - name: Update ROI
        env:
          PYTHONPATH: ${{ env.PYTHONPATH }}
          BET_DATA_DIR: ${{ vars.BET_DATA_DIR }}
          ENABLE_ROI_TRACKING: ${{ vars.ENABLE_ROI_TRACKING || 1 }}
          ROI_MIN_EDGE: ${{ vars.ROI_MIN_EDGE || 0.05 }}
          ROI_INCLUDE_CONSENSUS: ${{ vars.ROI_INCLUDE_CONSENSUS || 0 }}
          ENABLE_KELLY_STAKING: ${{ vars.ENABLE_KELLY_STAKING || 0 }}
          KELLY_BASE_UNITS: ${{ vars.KELLY_BASE_UNITS || 1.0 }}
          KELLY_MAX_UNITS: ${{ vars.KELLY_MAX_UNITS || 3.0 }}
          KELLY_EDGE_CAP: ${{ vars.KELLY_EDGE_CAP || 0.5 }}
        run: |
          python scripts/update_roi.py

      - name: Cleanup data (retention)
        env:
          PYTHONPATH: ${{ env.PYTHONPATH }}
          BET_DATA_DIR: ${{ vars.BET_DATA_DIR }}
          DATA_RETENTION_HISTORY_MAX: ${{ vars.DATA_RETENTION_HISTORY_MAX || 30 }}
        run: |
          python scripts/cleanup_data.py

      - name: Show outputs
        if: always()
        run: |
          for f in \
            data/fixtures_latest.json \
            data/odds/odds_latest.json \
            data/predictions/latest_predictions.json \
            data/value_alerts/value_alerts.json \
            data/roi/roi_metrics.json; do
            if [ -f "$f" ]; then
              echo "----- $f -----"
              head -n 120 "$f"
            else:
              echo "MISSING: $f"
            fi
          done

      - name: Upload data artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pipeline-e2e-data
          path: data
          retention-days: 7
